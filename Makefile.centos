MAKEFLAGS += --warn-undefined-variables

MULL_CC=/opt/llvm-3.9.0/bin/clang

CMAKE_COMMAND_LINE_DEBUG_FLAGS=# --trace --debug-output --trace-expand

BUILD_DIR_NINJA_DEBUG?=$(PWD)/BuildNinjaDebug
BUILD_DIR_NINJA_RELEASE?=$(PWD)/BuildNinjaRelease

MULL_CMAKE_TOOLCHAIN?=$(PWD)/Mull.toolchain.centos.cmake

MULL_UNITTESTS_DIR=$(BUILD_DIR_NINJA_DEBUG)/unittests
MULL=$(MULL_UNITTESTS_DIR)/MullUnitTests

# Self-Documented Makefile
# http://marmelab.com/blog/2016/02/29/auto-documented-makefile.html
.PHONY: help
help: ## Show this help message.
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

.PHONY: install test test_unit build_ninja_debug build_ninja_release

install: build_ninja_release ## Build using Ninja in Release mode and install to /opt/mull-driver
	cd $(BUILD_DIR_NINJA_RELEASE) && ninja install

test: test_unit

test_unit: build_ninja_debug ## Run Unit Tests (Builds Ninja cache first if it does not exist)
	cd $(BUILD_DIR_NINJA_DEBUG) && ninja MullUnitTests

	# TODO: A common but dirty solution, people should learn about rpath
	# http://stackoverflow.com/a/12399085/598057
	cd $(MULL_UNITTESTS_DIR) && LD_LIBRARY_PATH=$(BUILD_DIR_NINJA_DEBUG)/lib $(MULL)

example: build_ninja_driver
	cd Examples/HelloWorld && make example MULL=$(BUILD_DIR_NINJA_DEBUG)/tools/driver/mull-driver MULL_CC=$(MULL_CC)

example_run: build_ninja_driver
	cd Examples/HelloWorld && make run MULL=$(BUILD_DIR_NINJA_DEBUG)/tools/driver/mull-driver MULL_CC=$(MULL_CC)

build_ninja_driver: build_ninja_debug ## Build mull-driver target
	cd $(BUILD_DIR_NINJA_DEBUG) && ninja mull-driver

build_ninja_debug: ## Build Ninja project with CMake (Debug configuration, for development).
	mkdir -p $(BUILD_DIR_NINJA_DEBUG)

	rm -rfv $(BUILD_DIR_NINJA_DEBUG)/CMakeCache.txt
	cd $(BUILD_DIR_NINJA_DEBUG) && cmake ../ -G Ninja \
	  $(CMAKE_COMMAND_LINE_DEBUG_FLAGS) \
          -DCMAKE_TOOLCHAIN_FILE=$(MULL_CMAKE_TOOLCHAIN) \

build_ninja_release: ## Build Ninja project with CMake (Release build)
	mkdir -p $(BUILD_DIR_NINJA_RELEASE)

	rm -rfv $(BUILD_DIR_NINJA_RELEASE)/CMakeCache.txt
	cd $(BUILD_DIR_NINJA_RELEASE) && cmake ../ -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=$(MULL_CMAKE_TOOLCHAIN) \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/opt/mull-driver 

clean: clean_ninja ## Delete CMake build caches: Ninja.

clean_ninja: ## Delete Ninja CMake build cache.
	rm -rfv $(BUILD_DIR_NINJA_DEBUG)
	rm -rfv $(BUILD_DIR_NINJA_RELEASE)

